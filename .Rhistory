cat("\014")
rm(list=ls())
setwd("C:/Users/estre_cjf8jab/PycharmProjects/LeagueOfLegendsHeatMap")
df <- read.table("heatMapData.txt", sep = ",", col.names = c('X' , 'Y'))
library("ggplot2")
library("RColorBrewer")
# seperate X and Y values for discretizing function
xValues <- df$X
yValues <- df$Y
# discretize values and transform to dataframe
binnedData <- discretize2d(xValues, yValues, numBins1 = 128, numBins2 = 128, r1 = c(-120,14780), r2 = c(-120,14980))
binnedDataDF <- as.data.frame(binnedData)
colnames(binnedDataDF) <- c('X', 'Y', 'freq')
# create color palette
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
# plot of all point
library("ggplot2")
p <- (ggplot(df, aes(x=xValues, y=yValues)) +
geom_point(shape=1))
print(p)
# plot discretized data using log scale
p2 <- ggplot(df, aes(x=xValues, y=yValues)) + stat_bin2d(bins=128) + scale_fill_gradientn(colors=r, trans='log') + coord_fixed()
print(p2)
print('alldone')
cat("\014")
rm(list=ls())
setwd("C:/Users/estre_cjf8jab/PycharmProjects/LeagueOfLegendsHeatMap")
df <- read.table("heatMapData.txt", sep = ",", col.names = c('X' , 'Y'))
install.packages("ggplot2")
install.packages("RColorBrewer")
library("ggplot2")
library("RColorBrewer")
# seperate X and Y values for discretizing function
xValues <- df$X
yValues <- df$Y
# discretize values and transform to dataframe
binnedData <- discretize2d(xValues, yValues, numBins1 = 128, numBins2 = 128, r1 = c(-120,14780), r2 = c(-120,14980))
binnedDataDF <- as.data.frame(binnedData)
colnames(binnedDataDF) <- c('X', 'Y', 'freq')
# create color palette
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
# plot of all point
library("ggplot2")
p <- (ggplot(df, aes(x=xValues, y=yValues)) +
geom_point(shape=1))
print(p)
# plot discretized data using log scale
p2 <- ggplot(df, aes(x=xValues, y=yValues)) + stat_bin2d(bins=128) + scale_fill_gradientn(colors=r, trans='log') + coord_fixed()
print(p2)
print('alldone')
install.packages("RColorBrewer")
cat("\014")
rm(list=ls())
setwd("C:/Users/estre_cjf8jab/PycharmProjects/LeagueOfLegendsHeatMap")
df <- read.table("heatMapData.txt", sep = ",", col.names = c('X' , 'Y'))
install.packages("ggplot2")
install.packages("RColorBrewer")
library("ggplot2")
library("RColorBrewer")
# seperate X and Y values for discretizing function
xValues <- df$X
yValues <- df$Y
# discretize values and transform to dataframe
binnedData <- discretize2d(xValues, yValues, numBins1 = 128, numBins2 = 128, r1 = c(-120,14780), r2 = c(-120,14980))
binnedDataDF <- as.data.frame(binnedData)
colnames(binnedDataDF) <- c('X', 'Y', 'freq')
# create color palette
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
# plot of all point
library("ggplot2")
p <- (ggplot(df, aes(x=xValues, y=yValues)) +
geom_point(shape=1))
print(p)
# plot discretized data using log scale
p2 <- ggplot(df, aes(x=xValues, y=yValues)) + stat_bin2d(bins=128) + scale_fill_gradientn(colors=r, trans='log') + coord_fixed()
print(p2)
print('alldone')
install.packages("ggplot2")
install.packages(c("ggplot2", "cli", "lifecycle", "rlang", "scales", "vctrs"))
install.packages("rlang")
library(rlang)
library(rlang)
cat("\014")
rm(list=ls())
setwd("C:/Users/estre_cjf8jab/PycharmProjects/LeagueOfLegendsHeatMap")
df <- read.table("heatMapData.txt", sep = ",", col.names = c('X' , 'Y'))
install.packages(ggplot2)
install.packages(RColorBrewer)
library(ggplot2)
library(RColorBrewer)
# seperate X and Y values for discretizing function
xValues <- df$X
yValues <- df$Y
# discretize values and transform to dataframe
binnedData <- discretize2d(xValues, yValues, numBins1 = 128, numBins2 = 128, r1 = c(-120,14780), r2 = c(-120,14980))
binnedDataDF <- as.data.frame(binnedData)
colnames(binnedDataDF) <- c('X', 'Y', 'freq')
# create color palette
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
# plot of all point
library("ggplot2")
p <- (ggplot(df, aes(x=xValues, y=yValues)) +
geom_point(shape=1))
print(p)
# plot discretized data using log scale
p2 <- ggplot(df, aes(x=xValues, y=yValues)) + stat_bin2d(bins=128) + scale_fill_gradientn(colors=r, trans='log') + coord_fixed()
print(p2)
print('alldone')
cat("\014")
rm(list=ls())
setwd("C:/Users/estre_cjf8jab/PycharmProjects/LeagueOfLegendsHeatMap")
df <- read.table("heatMapData.txt", sep = ",", col.names = c('X' , 'Y'))
install.packages('ggplot2')
install.packages('RColorBrewer')
library(ggplot2)
library(RColorBrewer)
# seperate X and Y values for discretizing function
xValues <- df$X
yValues <- df$Y
# discretize values and transform to dataframe
binnedData <- discretize2d(xValues, yValues, numBins1 = 128, numBins2 = 128, r1 = c(-120,14780), r2 = c(-120,14980))
binnedDataDF <- as.data.frame(binnedData)
colnames(binnedDataDF) <- c('X', 'Y', 'freq')
# create color palette
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
# plot of all point
library("ggplot2")
p <- (ggplot(df, aes(x=xValues, y=yValues)) +
geom_point(shape=1))
print(p)
# plot discretized data using log scale
p2 <- ggplot(df, aes(x=xValues, y=yValues)) + stat_bin2d(bins=128) + scale_fill_gradientn(colors=r, trans='log') + coord_fixed()
print(p2)
print('alldone')
install.packages("ggplot2")
cat("\014")
rm(list=ls())
setwd("C:/Users/estre_cjf8jab/PycharmProjects/LeagueOfLegendsHeatMap")
df <- read.table("heatMapData.txt", sep = ",", col.names = c('X' , 'Y'))
install.packages('ggplot2')
install.packages('RColorBrewer')
library('ggplot2')
library('RColorBrewer')
# seperate X and Y values for discretizing function
xValues <- df$X
yValues <- df$Y
# discretize values and transform to dataframe
binnedData <- discretize2d(xValues, yValues, numBins1 = 128, numBins2 = 128, r1 = c(-120,14780), r2 = c(-120,14980))
binnedDataDF <- as.data.frame(binnedData)
colnames(binnedDataDF) <- c('X', 'Y', 'freq')
# create color palette
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
# plot of all point
library("ggplot2")
p <- (ggplot(df, aes(x=xValues, y=yValues)) +
geom_point(shape=1))
print(p)
# plot discretized data using log scale
p2 <- ggplot(df, aes(x=xValues, y=yValues)) + stat_bin2d(bins=128) + scale_fill_gradientn(colors=r, trans='log') + coord_fixed()
print(p2)
print('alldone')
update.packages("rlang")
update.packages("rlang")
packageVersion("rlang")
install.packages('rlang')
packageVersion("rlang")
> update.packages("rlang")
>
> update.packages("rlang")
>
>
>
>
>
> packageVersion("rlang")
[1] ‘0.4.11’
>
> install.packages('rlang')
There is a binary version available but the source version is later:
binary source needs_compilation
rlang 0.4.11  1.0.6              TRUE
Binaries will be installed
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/rlang_0.4.11.zip'
Content type 'application/zip' length 1224139 bytes (1.2 MB)
downloaded 1.2 MB
package ‘rlang’ successfully unpacked and MD5 sums checked
The downloaded binary packages are in
C:\Users\estre_cjf8jab\AppData\Local\Temp\RtmpmYcp3Q\downloaded_packages
>
> packageVersion("rlang")
[1] ‘0.4.11’
> update.packages("rlang")
>
> update.packages("rlang")
>
>
>
>
>
> packageVersion("rlang")
[1] ‘0.4.11’
>
> install.packages('rlang')
There is a binary version available but the source version is later:
binary source needs_compilation
rlang 0.4.11  1.0.6              TRUE
Binaries will be installed
trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/rlang_0.4.11.zip'
Content type 'application/zip' length 1224139 bytes (1.2 MB)
downloaded 1.2 MB
package ‘rlang’ successfully unpacked and MD5 sums checked
The downloaded binary packages are in
C:\Users\estre_cjf8jab\AppData\Local\Temp\RtmpmYcp3Q\downloaded_packages
>
> packageVersion("rlang")
[1] ‘0.4.11’
install.packages("rlang", version = "1.0.6")
packageVersion("rlang")
install.packages("rlang", version = "1.0.6")
install.packages("C:\Users\estre_cjf8jab\AppData\Local\Temp\RtmpmYcp3Q\downloaded_packages\rlang_1.0.6.tar", repos = NULL)
install.packages("rlang", version = "1.0.6")
update.packages("rlang")
packageVersion("rlang")
packageVersion("rlang")
packageVersion("rlang")
install.packages("rlang")
